{"version":3,"sources":["Components/Cards/useFetchProducts.js","Components/Cards/products.js","Components/Cards/Card.js","App.js","reportWebVitals.js","index.js"],"names":["useFetchProducts","useState","products","setProducts","loading","setLoading","a","axios","get","console","log","data","useEffect","fetchProducts","Products","useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","RecipeReviewCard","classes","React","expanded","setExpanded","handleExpandClick","style","marginTop","CircularProgress","margin","color","map","product","index","Container","Card","className","CardHeader","action","IconButton","aria-label","title","subheader","category","CardMedia","image","CardContent","Typography","variant","component","price","CardActions","disableSpacing","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec05d0b4.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport function useFetchProducts() {\r\n\r\n    // logics\r\n  const [products, setProducts] = useState([]); \r\n  const [loading, setLoading] = useState(false);\r\nasync function fetchProducts() {\r\n    try{\r\n        setLoading(true)\r\n        let products = await axios.get('https://fakestoreapi.com/products/')\r\n        console.log(\"products\",products.data);\r\n       setProducts(products.data)\r\n    }\r\n    catch(err){\r\n     console.log(\"error\", err)\r\n    }\r\n    finally{\r\n        setLoading(false)\r\n    }\r\n}\r\n\r\n\r\nuseEffect(() => {\r\n    \r\nfetchProducts()\r\n}, [])\r\n\r\n  return [products,loading]\r\n}","import {useFetchProducts} from \"./useFetchProducts\";\r\nimport React from 'react';\r\n\r\n\r\nfunction Products(params) {\r\nconst [products,loading] = useFetchProducts()\r\n\r\n// start of views / user view\r\nconsole.log(\"products\",products);\r\n if(loading){\r\n     return <div> <p>loading ...</p></div>\r\n }\r\n  return (<div>\r\n      \r\n        {products.map((product, index)=> {\r\n            return(<div>\r\n                 <p>{product.title}</p>\r\n                <img  style={{width:50}} src={product.image} alt={product.category} />\r\n                 <p>category: {product.category}</p>\r\n                <p> price{product.price}</p>\r\n                <hr/>\r\n            </div>)\r\n        })}\r\n\r\n         </div>);\r\n}\r\n// end of views\r\nexport default Products;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport  React  from \"react\";\r\nimport {useFetchProducts} from \"./useFetchProducts\";\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n  }));\r\n  \r\n  export default function RecipeReviewCard() {\r\n    const [products,loading] = useFetchProducts()\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n  \r\n    const handleExpandClick = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n    if(loading){\r\n        return <div>\r\n            <p style={{marginTop:\"20%\"}}>Loeading...</p>\r\n            <CircularProgress style={{margin:\"0%\", color:\"#8bf4f7\"}}/>\r\n        </div>\r\n    }\r\n    return (\r\n        \r\n      <div >\r\n       \r\n\r\n{products.map((product, index)=> {\r\nreturn(<div style={{}}>\r\n    <Container>\r\n    <Card className={classes.root} style={{margin:\"20px\", height:\"500px\"}} >\r\n   <CardHeader \r\nstyle={{backgroundColor:\"#8bf4f7\", height:\"150px\"}}\r\naction={\r\n<IconButton aria-label=\"settings\">\r\n  <MoreVertIcon />\r\n</IconButton>\r\n}\r\ntitle={product.title}\r\nsubheader={product.category}\r\n/>\r\n<CardMedia\r\nclassName={classes.media}\r\nimage={product.image}\r\n/>\r\n<CardContent >\r\n<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n{product.price + '-$'} \r\n</Typography>\r\n</CardContent>\r\n<CardActions disableSpacing style={{backgroundColor:\"#8bf4f7\"}}>\r\n<IconButton aria-label=\"add to cart\">\r\n<AddShoppingCartIcon />\r\n</IconButton>\r\n<IconButton aria-label=\"share\">\r\n<ShareIcon />\r\n</IconButton>\r\n<IconButton\r\nclassName={clsx(classes.expand, {\r\n  [classes.expandOpen]: expanded,\r\n})}\r\nonClick={handleExpandClick}\r\naria-expanded={expanded}\r\naria-label=\"show more\"\r\n>\r\n<ExpandMoreIcon />\r\n</IconButton>\r\n</CardActions>\r\n<Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n<CardContent>\r\n<Typography paragraph>Method:</Typography>\r\n<Typography paragraph>\r\n  Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10\r\n  minutes.\r\n</Typography>\r\n</CardContent>\r\n</Collapse>\r\n</Card>\r\n    </Container>\r\n     \r\n</div>)\r\n})}\r\n\r\n      </div>\r\n    );\r\n  }\r\n  ","import './App.css';\nimport Products from \"./Components/Cards/products\"\nimport RecipeReviewCard from \"./Components/Cards/Card\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RecipeReviewCard/>\n      {/* <Products/> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}